<?php

function jg_autocomplete_suggestions(){
    // Query for suggestions
    $suggestions = array();
    include_once(JG_PLUGIN_DIR.'/lib/JustGivingClient.php');
    $wpjg_generalSettings = get_option('jg_general_settings');
    $client = new JustGivingClient(
        $wpjg_generalSettings['ApiLocation'],
        $wpjg_generalSettings['ApiKey'],
        $wpjg_generalSettings['ApiVersion'],
        $wpjg_generalSettings['TestUsername'], $wpjg_generalSettings['TestValidPassword']); 
    if (isset($_REQUEST['q'])) $pages = $client->Page->SuggestPageShortNames($_REQUEST['q']);
    else $pages = $client->Page->SuggestPageShortNames($_REQUEST['term']);

    foreach ($pages->Names as $post):
        $suggestion = array();
        $suggestion['label'] = esc_html($post);
 
        $suggestions[]= $suggestion;
    endforeach;
    
    $response ='';
    // JSON encode and echo
    if (isset($_REQUEST['q']))
    {
        foreach ($suggestions as $line) $response .= $line['label'] . "\n";
    }    
    else $response = $_GET["callback"] . "(" . json_encode($suggestions) . ")";
    echo $response;
    exit;
}

function jg_front_end_create_page($atts){
    if(session_id() == '' || !isset($_SESSION)) {
        // session isn't started
        session_start();
    }
    ob_start();
    global $current_user;
    global $wp_roles;
    global $wpdb;
    global $error;	
    global $js_shortcode_on_front;
           
    extract(shortcode_atts(array('paid'=> 0, 'forgot'=> 0, 'display' => true, 'redirect' => '', 'teampage' => '', 'submit' => 'page', 'create' => '', 'thanks' => '', 'template' => ''), $atts));
    $user = '';
    $pass = '';
    $errors = array();
    
    //print_r($_SESSION);


    if ( trim($_SESSION['userEnc']) == '' ){
        $redirectLink = trim($forgot);
        if (intval($redirectLink) != 0)
            $redirectLink = get_permalink($redirectLink);
        else{
            if (jg_check_missing_http($redirectLink))
                $redirectLink = 'http://'. $redirectLink;
        }       
        wp_redirect( $redirectLink ); exit;
    }
    $wpjg_generalSettings = get_option('jg_general_settings');    
    $result = $wpdb->get_row("SELECT * FROM {$wpdb->prefix}jgusers WHERE `userEnc`='".trim($_SESSION['userEnc'])."';", ARRAY_A);     
    if ((!isset($result['paidaccess']) && $wpjg_generalSettings['paidaccess'] == 1) || ($result['paidaccess'] == 0 && $wpjg_generalSettings['paidaccess'] == 1))
    {
        $redirectLink = trim($paid);
        if (intval($redirectLink) != 0)
            $redirectLink = get_permalink($redirectLink);
        else{
            if (jg_check_missing_http($redirectLink))
                $redirectLink = 'http://'. $redirectLink;
        }       
        wp_redirect( $redirectLink ); exit;
    }
    include_once(JG_PLUGIN_DIR.'/lib/JustGivingClient.php');
    $client = new JustGivingClient(
        $wpjg_generalSettings['ApiLocation'],
        $wpjg_generalSettings['ApiKey'],
        $wpjg_generalSettings['ApiVersion'],
        $wpjg_generalSettings['TestUsername'], $wpjg_generalSettings['TestValidPassword']);  
    $result = $wpdb->get_results (
        "SELECT * FROM {$wpdb->prefix}jgusers WHERE `userEnc`='". trim($_SESSION['userEnc'])  ."'"
    );
    $suggestions = array();
    if ( 'POST' == $_SERVER['REQUEST_METHOD'] &&
            !empty( $_POST['action'] ) &&
            $_POST['action'] == 'createpage' &&
            wp_verify_nonce($_POST['createpage_nonce_field'],'verify_true_create') &&
            ($_POST['formName'] == 'createpage') ) {
        


        $pageExists = $client->Page->IsShortNameRegistered($_POST['pageshortname']);        
        /*create page*/
        if (!$pageExists){
            $targetAmount = $wpjg_generalSettings['targetAmount'];
            if (trim($_POST['targetch']) == 'var' && isset($_POST['target']) && is_numeric($_POST['target'])) $targetAmount = $_POST['target'];
            elseif (is_numeric($_POST['targetch']))  $targetAmount = $_POST['targetch'];

            $dto = array(
                'currency' => ($_SESSION['country'] == 'Ireland') ? 'EUR' : 'GBP',
                'pageShortName' => $_POST['pageshortname'],
                'charityId' =>  $wpjg_generalSettings['Charity'],
                'eventId' => $wpjg_generalSettings['Event'],
                'justGivingOptIn' => ((bool) $_POST['jgoptin']),
                'charityOptIn' => ((bool) $_POST['charityoptin']),
                'pageTitle' => stripslashes($_POST['pagetitle']),
                'targetAmount' => $targetAmount  ,
                'charityFunded' => false,
                'pageStory' => $wpjg_generalSettings['pageStory'],
                'pageSummaryWhat' => $wpjg_generalSettings['pageSummaryWhat'],
                "pageSummaryWhy" => $wpjg_generalSettings['pageSummaryWhy'],
                "images" => array(array(
                    "caption" => get_bloginfo( 'name' ),                  
                    "isDefault" => true,
                    "url" => (!jg_check_missing_http($wpjg_generalSettings['imageurl'])) ? home_url() . $wpjg_generalSettings['imageurl'] : $wpjg_generalSettings['imageurl']
                )),
                "customCodes" => array( 
                    "customCode1" => $wpjg_generalSettings['cc1'],
                    "customCode2" => $wpjg_generalSettings['cc2'],
                    "customCode3" => $wpjg_generalSettings['cc3'],
                    "customCode4" => $wpjg_generalSettings['cc4'],
                    "customCode5" => $wpjg_generalSettings['cc5'],
                    "customCode6" => $wpjg_generalSettings['cc6']
                )
            );

            //$cntent  = print_R($dto, true);
            //file_put_contents( '/xampp/htdocs/cruk_undie/out.txt' , $cntent, FILE_APPEND );    
            $page = $client->Page->Create(trim($_SESSION['userEnc']), $dto);
            /*update user with url*/
            
            $errorMark = '';
            if (!$page) $errorMark = 'Could not create page at JustGiving';
            //$cntent  = print_R($page, true);
            //file_put_contents( '/xampp/htdocs/cruk_undie/out.txt' , $cntent, FILE_APPEND );    
            if ($page){
                $result = $wpdb->get_results (
                        "SELECT * FROM {$wpdb->prefix}jgusers WHERE `userEnc`='". trim($_SESSION['userEnc'])  ."'"
                ); 
                //file_put_contents( '/xampp/htdocs/cruk_undie/out.txt' ,  "SELECT * FROM wp_jgusers WHERE `userEnc`='".trim($_SESSION['userEnc'])."'", FILE_APPEND );    
                //$cntent  = print_R($result, true);
                //file_put_contents( '/xampp/htdocs/cruk_undie/out.txt' , $cntent, FILE_APPEND );
                $uid = 0;
                if (count($result) > 0) {
                    //file_put_contents( '/xampp/htdocs/cruk_undie/out.txt' , 'update', FILE_APPEND );    
                    $wpdb->update(
                        $wpdb->prefix . "jgusers",
                        array(
                            'pageurl' => $page->next->uri,
                            'optin' => $_POST['charityoptin'],
                            'tsandcs' => $_POST['tandcs']
                        ),
                        array(                 
                            'userEnc' => trim($_SESSION['userEnc'])
                        )
                        );
                    //$cntent  = print_R($wpdb->queries , true);  
                    //file_put_contents( '/xampp/htdocs/cruk_undie/out.txt' , $cntent, FILE_APPEND );
                    $uid = $result['id'];
                }
                else{
                    //file_put_contents( '/xampp/htdocs/cruk_undie/out.txt' , 'insert', FILE_APPEND );    
                    $wpdb->insert( 
                        $wpdb->prefix . "jgusers", 
                        array(  
                            'email' => trim($_SESSION['email']),
                            'userEnc' => trim($_SESSION['userEnc']),
                            'pageurl' => $page->next->uri,
                            'signupdate' => time(),
                            'optin' => $_POST['charityoptin'],
                            'tsandcs' => $_POST['tandcs']
                        ), 
                        array(
                            '%s',
                            '%s', 
                            '%s',         
                            '%d',
                            '%d',
                            '%d'                            
                        ) 
                    ); 
                    $uid = $wpdb->insert_id;    
                } 
                // echo 'b';   
                // add to team if chosen

                // $cntent  = print_R($_POST, true);
                // file_put_contents( '/xampp/htdocs/cruk_undie/out.txt' , $cntent, FILE_APPEND );    
                $vars = array();
                if (isset($_POST['jointeam']) && trim($_POST['jointeam']) !== ''){
                    //echo 'b';   
                    $user = array();
                    $user['pageShortName'] = $dto['pageShortName'];
                    $client->Team->Join($_POST['jointeam'], trim($_SESSION['userEnc']), $user);
                    $teamqs = $wpdb->get_row (
                            "SELECT * FROM {$wpdb->prefix}jgteams WHERE `teamshortname`='". trim($_POST['jointeam'])  ."' "
                    ); 
                    $vars = array(
                        'firstname' => $result['firstname'],
                        'url' => $page->next->uri,
                        'editurl' => $page->signOnUrl,
                        'donateurl' => $page->next->uri ."/4w350m3/donate/?amount=5.00",
                        'teamid' => $teamqs->id,
                        'teamname' => $teamqs->teamname,
                        'teamshortname' => $teamqs->teamshortname,
                        'teamstory' => $teamqs->teamstory,
                        'teamfbpage' => $teamqs->teamfbpage,
                        'teamtwpage' => $teamqs->teamtwpage,
                    );
                    $members = array();
                    $members = json_decode($teamqs->teammembers, true);
                    $members[] = array(
                        'id' => $uid,
                        'numberOfDonations' => 0,
                        'pageShortName' => $dto['pageShortName'],
                        'pageTitle' => $dto['pageTitle'],
                        'ref' => '',
                        'totalAmountRaised' => 0                   
                    );
                    $wpdb->update(
                        $wpdb->prefix . "jgteams",
                        array(
                            'teammembers' => json_encode($members)
                        ),
                        array(                 
                            'teamshortname' => trim($_POST['jointeam'])
                        )
                    );                     

                } 
                else
                {
                    $vars = array(
                        'firstname' => $result['firstname'],
                        'url' => $page->next->uri,
                        'editurl' => $page->signOnUrl,
                        'donateurl' => $page->next->uri ."/4w350m3/donate/?amount=5.00",
                    );                 
                }

                $useracc = $client->Account->GetUser(trim($_SESSION['userEnc']));
                if (trim($vars['firstname']) == ''){
                    $vars['firstname'] =  $useracc->firstName;
                    $result['firstname'] =  $useracc->firstName;
                    $result['lastname'] =  $useracc->lastName;
                }
                $email = $_SESSION['email'];
                if (trim($email) == ''){
                    $email = $useracc->email;
                }
                $ba = sendthanks(trim($email), $result['firstname']. ' '. $result['lastname'], $vars, 1);  

                // -> send straight to thanks
                $redirectLink = '';
                if (trim($teampage) !== ''){
                    $redirectLink = trim($teampage);
                    if (intval($redirectLink) != 0)
                        $redirectLink = get_permalink($redirectLink);
                    else{
                        if (jg_check_missing_http($redirectLink))
                            $redirectLink = 'http://'. $redirectLink;
                    }
                    $redirectLink = (parse_url($redirectLink, PHP_URL_QUERY)) ? $redirectLink . '&team='.$_POST['jointeam'] : rtrim($redirectLink, '?') . '?team='.$_POST['jointeam'];
                }                
                elseif (trim($redirect) !== ''){
                    $redirectLink = trim($redirect);
                    if (intval($redirectLink) != 0)
                        $redirectLink = get_permalink($redirectLink);
                    else{
                        if (jg_check_missing_http($redirectLink))
                            $redirectLink = 'http://'. $redirectLink;
                    }
                }
                else{
                    $redirectLink = trim($thanks);
                    if (intval($redirectLink) != 0){
                        $redirectLink = get_permalink($redirectLink);
                    }
                    else{
                        if (jg_check_missing_http($redirectLink))
                            $redirectLink = 'http://'. $redirectLink;
                    }
                }
                $redirectlink = (parse_url($redirectLink, PHP_URL_QUERY)) ? $redirectLink . '&nexturl='.$page->next->uri : rtrim($redirectLink, '?') . '?nexturl='.$page->next->uri;
                //file_put_contents('curldata.txt', $redirectLink , FILE_APPEND);  
                wp_redirect( $redirectLink );
                exit;                
            }
        }
        else{ 
            if (isset($_POST['pageshortname'])){
                $pages = $client->Page->SuggestPageShortNames($_POST['pageshortname']);    
                foreach ($pages->Names as $post)
                {
                    $suggestion = array();
                    $suggestion['label'] = esc_html($post);
                    $suggestions[]= $suggestion;
                }            
            }
        }
        $errors['shortname']['message'] = "Sorry! Someone took that address already.";
    }
    
    require_once(JG_PLUGIN_DIR.'/lib/Smarty.class.php');
    $smarty = new Smarty();
    $smarty->template_dir = JG_PLUGIN_DIR.'/smarty/templates/';
    $smarty->compile_dir  = JG_PLUGIN_DIR.'/smarty/templates_c/';
    $smarty->config_dir   = JG_PLUGIN_DIR.'/smarty/configs/';
    $smarty->cache_dir    = JG_PLUGIN_DIR.'/smarty/cache/';
    
    //$teams = $client->Team->Search();    
    //print_R($teams);

    $teamRows = $wpdb->get_results(" SELECT * FROM {$wpdb->prefix}jgteams ;");    
    $items_list = array(
        '' => array(
            'label' => ""
        )
    );

    foreach ($teamRows as $team){
        $items_list[$team->teamshortname] = array('label' =>  $team->teamname);
    }    
    
    $smarty->assign('teams', $items_list);
    $formurl = jg_curpageurl();
    
    $smarty->assign('pageshortname',stripslashes($_POST['pageshortname']));
    $smarty->assign('errorshortname',$errors['shortname']['message']); 
    $smarty->assign('pagetitle', stripslashes($_POST['pagetitle']));
    $smarty->assign('errorpagetitle', $errors['pagetitle']['message']); 
    $smarty->assign('target', (isset($_POST['target']) && is_numeric($_POST['target'])) ? $_POST['target'] : $wpjg_generalSettings['targetAmount']);
    $smarty->assign('errortargetAmount', $errors['target']['message']); 
    $smarty->assign('nonce', wp_nonce_field('verify_true_create','createpage_nonce_field', true, false)); 
    $smarty->assign('jgoptinyes', ($_POST['jgoptin'] =='1' || !isset($_REQUEST['jgoptin'])) ? 'checked="checked"':'');
    $smarty->assign('jgoptinno', ($_POST['jgoptin'] =='0') ? 'checked="checked"':'');
    $smarty->assign('choptinyes', ($_POST['charityoptin']=='1' || ($_SESSION['optin'] == 1 && $_POST['charityoptin'] != 0)  || (!isset($_REQUEST['charityoptin']) && (!isset($_SESSION['optin']) || $_SESSION['optin'] != 0))) ? 'checked="checked"':'');
    $smarty->assign('choptinno', ($_POST['charityoptin'] =='0') ? 'checked="checked"':'');
    $smarty->assign('formurl', $formurl);
    $smarty->assign('templateurl', get_template_directory_uri()); 
    $smarty->assign('suggestions', $suggestions);

    if ($template != '') $smarty->display($template);    
    else $smarty->display('create-page.html'); 
    
    $output = ob_get_contents();
    ob_end_clean();
	
    return $output;
}
?>